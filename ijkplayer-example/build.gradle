def runnable = false

if (runnable) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}


android {
    // http://tools.android.com/tech-docs/new-build-system/tips
    //noinspection GroovyAssignabilityCheck
    compileSdkVersion rootProject.ext.compileSdkVersion
    //noinspection GroovyAssignabilityCheck
    buildToolsVersion rootProject.ext.buildToolsVersion

    lintOptions {
        abortOnError false
    }
    defaultConfig {
        if (runnable) {
            applicationId "tv.danmaku.ijk.media.example"
        }
        minSdkVersion 14
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    if (runnable) {
        flavorDimensions "cpu"
        productFlavors {
            all32 {
                minSdkVersion 14
                dimension "cpu"
            }
            all64 {
                minSdkVersion 21
                dimension "cpu"
            }
            // armv5 {}
            // armv7a {}
            // arm64 { minSdkVersion 21 }
            // x86 {}
        }
    }

    sourceSets {
        main {
            if (runnable) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:preference-v7:27.1.1'
    implementation 'com.android.support:support-annotations:27.1.1'

    implementation 'com.squareup:otto:1.3.8'

    api project(':ijkplayer-java')
    implementation project(':ijkplayer-exo')
    if (runnable) {
//    all32Implementation project(':ijkplayer-armv5')
        all32Implementation project(':ijkplayer-armv7a')
        all32Implementation project(':ijkplayer-x86')

//    all64Implementation project(':ijkplayer-armv5')
        all64Implementation project(':ijkplayer-armv7a')
        all64Implementation project(':ijkplayer-arm64')
        all64Implementation project(':ijkplayer-x86')
        all64Implementation project(':ijkplayer-x86_64')
    } else {
        implementation project(':ijkplayer-armv7a')
//        implementation project(':ijkplayer-arm64')
        implementation project(':ijkplayer-x86')
    }

    // compile 'tv.danmaku.ijk.media:ijkplayer-java:0.8.8'
    // compile 'tv.danmaku.ijk.media:ijkplayer-exo:0.8.8'

    // all32Compile 'tv.danmaku.ijk.media:ijkplayer-armv5:0.8.8'
    // all32Compile 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8'
    // all32Compile 'tv.danmaku.ijk.media:ijkplayer-x86:0.8.8'

    // all64Compile 'tv.danmaku.ijk.media:ijkplayer-armv5:0.8.8'
    // all64Compile 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8'
    // all64Compile 'tv.danmaku.ijk.media:ijkplayer-arm64:0.8.8'
    // all64Compile 'tv.danmaku.ijk.media:ijkplayer-x86:0.8.8'
    // all64Compile 'tv.danmaku.ijk.media:ijkplayer-x86_64:0.8.8'

    // armv5Compile project(':player-armv5')
    // armv7aCompile project(':player-armv7a')
    // arm64Compile project(':player-arm64')
    // x86Compile project(':player-x86')
    // x86_64Compile project(':player-x86_64')
}
